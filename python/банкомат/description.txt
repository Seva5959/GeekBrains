Техническое задание (ТЗ) на разработку программы "Банкомат"
1. Цель проекта
Разработать консольное приложение, имитирующее функциональность банкомата, позволяющее пользователю выполнять основные
банковские операции, такие как проверка баланса, снятие и пополнение средств, а также изменение PIN-кода.

2. Функциональные требования
2.1. Авторизация пользователя
Вход в систему должен осуществляться с помощью номера карты и PIN-кода.
Если пользователь вводит неверный PIN-код три раза подряд, доступ должен быть заблокирован.
2.2. Основные операции
Проверка баланса: Пользователь должен иметь возможность проверить текущий баланс своего счета.
Снятие наличных: Пользователь может снять средства со своего счета. Необходимо учитывать минимальный и максимальный
лимиты на одну операцию снятия, а также проверку достаточности средств на счету.
Пополнение счета: Пользователь может пополнить свой счет путем внесения наличных.
Изменение PIN-кода: Пользователь может изменить свой PIN-код.
2.3. Дополнительные функции
История операций: Хранение и отображение последних 5 операций по счету (пополнение, снятие, проверка баланса).
Смена языка интерфейса: Возможность выбора языка интерфейса (например, русский и английский).
3. Нефункциональные требования
3.1. Интерфейс пользователя
Интерфейс должен быть текстовым (консольным) и интуитивно понятным.
Взаимодействие с пользователем должно происходить через меню с соответствующими пунктами для каждой операции.
3.2. Безопасность
Данные пользователей (номер карты, PIN-код) должны храниться в зашифрованном виде.
В случае неактивности пользователя в течение определенного времени (например, 2 минуты), сессия должна завершаться автоматически.
3.3. Надежность
Программа должна корректно обрабатывать ввод некорректных данных и показывать соответствующие сообщения об ошибках.
Система должна быть устойчивой к неожиданным сбоям и сохранять текущие данные.
3.4. Производительность
Операции с данными должны выполняться с минимальной задержкой.
4. Архитектура
Программа должна быть разделена на модули:
Модуль авторизации
Модуль работы с балансом (проверка, пополнение, снятие)
Модуль работы с историей операций
Модуль управления пользователем (изменение PIN-кода)
5. Технологии
Язык программирования: Python (или другой язык по твоему выбору)
Для хранения данных можно использовать файл (например, CSV или JSON) или базу данных SQLite.
6. Тестирование
Написать тестовые сценарии для всех основных функций.
Провести тестирование на обработку ошибок (например, ввод некорректного PIN-кода, превышение лимита снятия средств и т.д.).
